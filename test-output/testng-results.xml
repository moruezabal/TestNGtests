<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="13" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-14T22:07:06 ART" name="Default suite" finished-at="2022-06-14T22:07:07 ART" duration-ms="206">
    <groups>
    </groups>
    <test started-at="2022-06-14T22:07:06 ART" name="Default test" finished-at="2022-06-14T22:07:07 ART" duration-ms="206">
      <class name="testng.ProgramaTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:06 ART" name="beforeSuite" finished-at="2022-06-14T22:07:06 ART" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:06 ART" name="beforeTest" finished-at="2022-06-14T22:07:06 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:06 ART" name="beforeClass" finished-at="2022-06-14T22:07:06 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addProgramacion()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="addProgramacion" finished-at="2022-06-14T22:07:07 ART" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProgramacion -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="eliminarProgramaciones()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="eliminarProgramaciones" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eliminarProgramaciones -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f(java.lang.Integer,java.lang.String)[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="f" data-provider="dp" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f(java.lang.Integer,java.lang.String)[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="f" data-provider="dp" finished-at="2022-06-14T22:07:07 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getCantOcurrencias()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="getCantOcurrencias" finished-at="2022-06-14T22:07:07 ART" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCantOcurrencias -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getCantProgramaciones()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="getCantProgramaciones" finished-at="2022-06-14T22:07:07 ART" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCantProgramaciones -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getCantTareasEntre()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="getCantTareasEntre" finished-at="2022-06-14T22:07:07 ART" duration-ms="17" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
at testng.ProgramaTest.getCantTareasEntre(ProgramaTest.java:95)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCantTareasEntre -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="programaVacio()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="programaVacio" finished-at="2022-06-14T22:07:07 ART" duration-ms="7" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
at testng.ProgramaTest.programaVacio(ProgramaTest.java:100)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- programaVacio -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="removeProgramacion()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="removeProgramacion" finished-at="2022-06-14T22:07:07 ART" duration-ms="4" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
at testng.ProgramaTest.removeProgramacion(ProgramaTest.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeProgramacion -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testUsr(usuario.Usuario)[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="testUsr" data-provider="generador-usr" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[usuario.Usuario@3f191845]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsr -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testUsr(usuario.Usuario)[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="testUsr" data-provider="generador-usr" finished-at="2022-06-14T22:07:07 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[usuario.Usuario@72035809]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsr -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testUsr(usuario.Usuario)[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="testUsr" data-provider="generador-usr" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[usuario.Usuario@8458f04]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsr -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testUsr(usuario.Usuario)[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="testUsr" data-provider="generador-usr" finished-at="2022-06-14T22:07:07 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[usuario.Usuario@5e2c3d18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsr -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testUsr(usuario.Usuario)[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="testUsr" data-provider="generador-usr" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[usuario.Usuario@645aa696]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsr -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testUsr(usuario.Usuario)[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="testUsr" data-provider="generador-usr" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[usuario.Usuario@273444fe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsr -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="beforeMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testUsr(usuario.Usuario)[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="testUsr" data-provider="generador-usr" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[usuario.Usuario@353352b6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsr -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterMethod" finished-at="2022-06-14T22:07:07 ART" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterClass" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterTest" finished-at="2022-06-14T22:07:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:testng.ProgramaTest@10163d6]" started-at="2022-06-14T22:07:07 ART" name="afterSuite" finished-at="2022-06-14T22:07:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testng.ProgramaTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
